### YamlMime:RESTOperation
uid: digitaltwins-hostname.dataplane.twins.digitaltwins_add
name: DigitalTwins Add
service: Reference
groupName: Twins
apiVersion: 2023-10-31
summary: >-
  Adds or replaces a digital twin.

  Status codes:

  * 200 OK

  * 400 Bad Request
    * InvalidArgument - The digital twin id or payload is invalid.
    * ModelDecommissioned - The model for the digital twin is decommissioned.
    * TwinLimitReached - The maximum number of digital twins allowed has been reached.
    * ValidationFailed - The digital twin payload is not valid.
  * 412 Precondition Failed
    * PreconditionFailed - The precondition check (If-Match or If-None-Match) failed.
consumes:
- application/json
produces:
- application/json
paths:
- content: PUT https://digitaltwins-hostname/digitaltwins/{id}?api-version=2023-10-31
uriParameters:
- name: id
  in: path
  isRequired: true
  description: The id of the digital twin. The id is unique within the service and case sensitive.
  types:
  - uid: string
- name: api-version
  in: query
  isRequired: true
  description: The requested API version.
  types:
  - uid: string
responses:
- name: 200 OK
  headers:
  - name: ETag
    value: string
  description: Success
  types:
  - uid: DigitalTwin
- name: Other Status Codes
  headers:
  - name: x-ms-error-code
    value: string
  description: Default response.
  types:
  - uid: ErrorResponse
requestBody:
- name: default
  parameters:
  - name: twin
    in: body
    description: The digital twin instance being added. If provided, the $dtId property is ignored.
    types:
    - uid: object
requestHeader:
- name: If-None-Match
  in: header
  description: Only perform the operation if the entity does not already exist.
  types:
  - uid: string
- name: traceparent
  in: header
  description: Identifies the request in a distributed tracing system.
  types:
  - uid: string
- name: tracestate
  in: header
  description: Provides vendor-specific trace identification information and is a companion to traceparent.
  types:
  - uid: string
definitions:
- name: ErrorResponse
  description: Error response.
  kind: object
  properties:
  - name: error
    description: The error details.
    types:
    - uid: Error
- name: Error
  description: Error definition.
  kind: object
  properties:
  - name: code
    isReadOnly: true
    description: Service specific error code which serves as the substatus for the HTTP error code.
    types:
    - uid: string
  - name: message
    isReadOnly: true
    description: A human-readable representation of the error.
    types:
    - uid: string
  - name: details
    isReadOnly: true
    description: Internal error details.
    types:
    - uid: Error
      isArray: true
  - name: innererror
    description: An object containing more specific information than the current object about the error.
    types:
    - uid: InnerError
- name: InnerError
  description: A more specific error description than was provided by the containing error.
  kind: object
  properties:
  - name: code
    description: A more specific error code than was provided by the containing error.
    types:
    - uid: string
  - name: innererror
    description: An object containing more specific information than the current object about the error.
    types:
    - uid: InnerError
examples:
- name: Add a digital twin
  request:
    uri: PUT https://digitaltwins-hostname/digitaltwins/myNewTwinId?api-version=2023-10-31
    body: >-
      {
        "$metadata": {
          "$model": "dtmi:com:example:interfaces:interfaceName;1"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://digitaltwins-hostname/digitaltwins/myNewTwinId?api-version=2023-10-31

      {
        "$metadata": {
          "$model": "dtmi:com:example:interfaces:interfaceName;1"
        }
      }

      ```

  responses:
  - statusCode: "200"
    body: >-
      {
        "$dtId": "myNewTwinId",
        "$metadata": {
          "$model": "dtmi:com:example:interfaces:interfaceName;1",
          "$lastUpdateTime": "2022-02-28T00:30:00.1234567Z"
        }
      }
- name: Add a digital twin (with properties and components)
  request:
    uri: PUT https://digitaltwins-hostname/digitaltwins/myNewTwinId?api-version=2023-10-31
    body: >-
      {
        "$metadata": {
          "$model": "dtmi:com:example:interfaces:interfaceName;1",
          "property1": {
            "sourceTime": "2022-05-31T12:00:01.000125009Z"
          }
        },
        "property1": 1,
        "property2": {
          "subProperty1": "some value",
          "subProperty2": "some other value"
        },
        "component1": {
          "$metadata": {
            "componentProperty": {
              "sourceTime": "2022-05-31T12:00:00.000125009Z"
            }
          },
          "componentProperty": "some value"
        }
      }
    codeTab: |+
      # [HTTP](#tab/HTTP)
      ``` http
      PUT https://digitaltwins-hostname/digitaltwins/myNewTwinId?api-version=2023-10-31


      {
        "$metadata": {
          "$model": "dtmi:com:example:interfaces:interfaceName;1",
          "property1": {
            "sourceTime": "2022-05-31T12:00:01.000125009Z"
          }
        },
        "property1": 1,
        "property2": {
          "subProperty1": "some value",
          "subProperty2": "some other value"
        },
        "component1": {
          "$metadata": {
            "componentProperty": {
              "sourceTime": "2022-05-31T12:00:00.000125009Z"
            }
          },
          "componentProperty": "some value"
        }
      }

      ```

    headers:
    - name: If-None-Match
      value: '*'
  responses:
  - statusCode: "200"
    body: >-
      {
        "$dtId": "myNewTwinId",
        "$etag": "W/\"9c2876c2-aff0-40b3-9fba-0c6be9d020a6\"",
        "property1": 1,
        "property2": {
          "subProperty1": "some value",
          "subProperty2": "some other value"
        },
        "component1": {
          "componentProperty": "some value",
          "$metadata": {
            "$lastUpdateTime": "2022-02-28T00:30:00.1234567Z",
            "componentProperty": {
              "lastUpdateTime": "2022-02-28T00:30:00.1234567Z",
              "sourceTime": "2022-05-31T12:00:01.000125009Z"
            }
          }
        },
        "$metadata": {
          "$lastUpdateTime": "2022-02-28T00:30:00.1234567Z",
          "$model": "dtmi:com:example:interfaces:interfaceName;1",
          "property1": {
            "lastUpdateTime": "2022-02-28T00:30:00.1234567Z",
            "sourceTime": "2022-05-31T12:00:01.000125009Z"
          },
          "property2": {
            "lastUpdateTime": "2022-02-28T00:30:00.1234567Z"
          }
        }
      }
security:
- name: oauth2
  type: oauth2
  flow: implicit
  authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize?resource=0b07f429-9f4b-4714-9392-cc5e8e80c8b0
metadata:
  description: >-
    Adds or replaces a digital twin.

    Status codes:

    200 OK

    400 Bad Request

    InvalidArgument - The digital twin id or payload is invalid.
errorCodes: []
